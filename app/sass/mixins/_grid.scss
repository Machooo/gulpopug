/// Grid system
//
// Сгенерируйте колонки семантической сетки с этими миксинами.

@mixin make-container() {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
}

// Для каждой точки останова определите максимальную ширину контейнера в медиа-запросе.
@mixin make-container-max-widths(
  $max-widths: $container-max-widths,
  $breakpoints: $grid-breakpoints,
  $breakpoint-names: map-keys($breakpoints)
) {
  @each $breakpoint in $breakpoint-names {
    @if map-has-key($breakpoints, $breakpoint) and
      map-has-key($max-widths, $breakpoint)
    {
      @include media-breakpoint-down($breakpoint, $breakpoints) {
        max-width: map-get($max-widths, $breakpoint);
      }
    }
  }
}

// Для каждой точки останова определите свою штрину gutter.
@mixin make-gutter-padding(
  $gutters: $grid-gutters-width,
  $breakpoints: $grid-breakpoints,
  $breakpoint-names: map-keys($breakpoints)
) {
  @each $breakpoint in $breakpoint-names {
    @if map-has-key($breakpoints, $breakpoint) and
      map-has-key($gutters, $breakpoint)
    {
      @include media-breakpoint-down($breakpoint, $breakpoints) {
        padding-right: map-get($gutters, $breakpoint) / 2;
        padding-left: map-get($gutters, $breakpoint) / 2;
      }
    }
  }
}

@mixin make-gutter-margin(
  $gutters: $grid-gutters-width,
  $breakpoints: $grid-breakpoints,
  $breakpoint-names: map-keys($breakpoints)
) {
  @each $breakpoint in $breakpoint-names {
    @if map-has-key($breakpoints, $breakpoint) and
      map-has-key($gutters, $breakpoint)
    {
      @include media-breakpoint-down($breakpoint, $breakpoints) {
        margin-right: -(map-get($gutters, $breakpoint) / 2);
        margin-left: -(map-get($gutters, $breakpoint) / 2);
      }
    }
  }
}

@mixin make-row() {
  display: flex;
  flex-wrap: wrap;
}

@mixin make-col-ready() {
  position: relative;
  // Чтобы столбцы не становились слишком узкими при меньших уровнях сетки, всегда устанавливайте параметр `width: 100%;`.
  // Это работает, потому что мы используем значения `flex` позже, чтобы переопределить эту начальную ширину.
  width: 100%;
}

@mixin make-col-auto() {
  flex: 0 0 auto;
  width: auto;
  max-width: 100%; // Сброс более ранних уровней сетки.
}

@mixin make-col($size, $columns) {
  flex: 0 0 percentage($size / $columns);
  // Добавьте `max-width`, чтобы содержимое в каждом столбце не уменьшало ширину столбца.
  // Применяется к IE10+ и Firefox. Chrome и Safari, похоже, не требуют этого.
  max-width: percentage($size / $columns);
}

// Row columns
//
// Укажите родительский элемент (например, .row), чтобы принудить непосредственных потомков к NN числу столбцов.
// Поддерживает перенос на новые линии, но не делает сетку в стиле grid.
@mixin row-cols($count) {
  & > * {
    flex: 0 0 100% / $count;
    max-width: 100% / $count;
  }
}
